/* This code was automatically generated by Cackle */
/* Copyright 2023 MIT License, Mike Shargowitz*/
/* Command ReferenceCommand: ctx run _a_c --bag */ 

{
    TokenData: {
        Obj{
            &name='myjnode',
            &typ='container',
            &child{
                &name='key',
                &typ='arr.int',
                &value=[1,2,3,4,5]
            },
            &child{
                &name='key.settings',
                &typ='container',
                &child{
                    &name='key.mapallinobject',
                    &typ='bool',
                    &value=true
                },
                &child{
                    &name='key.arrange',
                    &typ='bool',
                    &value=false
                },
                &child{
                    &name='key.duplicate.keyword',
                    &typ='string',
                    &value='duplicate'
                },
                &child{
                    &name='key.other',
                    &typ='string',
                    &value='default'
                }
            },
            &child{
                &name='typedef',   
                &typ='container',
                &child{
                    &name='mytestingstring',
                    &typ='string',
                    &value='string'
                },
                &child{
                    &name='mytestingint',
                    &typ='int',
                    &value=100
                },
                &child{
                    &name='mytestingbinary',
                    &typ='string.binary',
                    &value=101000101001010100101010010101001011
                },
                &child{
                    &name='mytestingbool',
                    &typ='bool',
                    &value=true
                }
            },
            &child{
                &name='runcommands',
                &typ='arr.string',
                &value=["key duplicate key2","key2 push [6, 7, 8]","key2 push mytestingint","binarycluster asciidecode mytestingbinary string.decodedbinary","console echo decodedbinary","json.proccesses.compile"]
            }
        }
    }
}
